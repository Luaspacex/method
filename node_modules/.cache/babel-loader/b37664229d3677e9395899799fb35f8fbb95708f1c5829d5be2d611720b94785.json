{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/select/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SelectOptionsFromAPI from './SelectOptionsFromAPI';\nimport BurgerMenu from \"./BurgerMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [filteredCounties, setFilteredCounties] = useState([]);\n  useEffect(() => {\n    const fetchCounties = async () => {\n      try {\n        const response = await fetch(`https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`, {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n            'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setFilteredCounties(data);\n        } else {\n          console.error('Invalid response format. Expected an array.');\n        }\n      } catch (error) {\n        console.error('Error fetching counties:', error);\n      }\n    };\n    fetchCounties();\n  }, [inputValue]);\n  const handleFilter = () => {\n    // Filter counties based on user input\n    const filtered = filteredCounties.filter(county => county.name.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredCounties(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCounties.map(county => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: county.name\n      }, county.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3BipqLMlWKX0Vu3FTi2yn9+x7D4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SelectOptionsFromAPI","BurgerMenu","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","filteredCounties","setFilteredCounties","fetchCounties","response","fetch","method","headers","data","json","Array","isArray","console","error","handleFilter","filtered","filter","county","name","toLowerCase","includes","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["/Users/aluabajzanova/Desktop/select/my-app/src/App.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport SelectOptionsFromAPI from './SelectOptionsFromAPI';\nimport BurgerMenu from \"./BurgerMenu\";\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [filteredCounties, setFilteredCounties] = useState([]);\n  useEffect(() => {\n    const fetchCounties = async () => {\n      try {\n        const response = await fetch(\n          `https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`,\n          {\n            method: 'GET',\n            headers: {\n              'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n              'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const data = await response.json();\n\n        if (Array.isArray(data)) {\n          setFilteredCounties(data);\n        } else {\n          console.error('Invalid response format. Expected an array.');\n        }\n      } catch (error) {\n        console.error('Error fetching counties:', error);\n      }\n    };\n    fetchCounties();\n  }, [inputValue]);\n  const handleFilter = () => {\n    // Filter counties based on user input\n    const filtered = filteredCounties.filter((county) =>\n      county.name.toLowerCase().includes(inputValue.toLowerCase())\n    );\n    setFilteredCounties(filtered);\n  };\n  return (\n\n    <div>\n    <input\n      type=\"text\"\n      value={inputValue}\n      onChange={(e) => setInputValue(e.target.value)}\n    />\n    <ul>\n      {filteredCounties.map((county) => (\n        <li key={county.id}>{county.name}</li>\n      ))}\n    </ul>\n  </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5DC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0DAAyDN,UAAW,EAAC,EACtE;UACEO,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,gBAAgB,EAAE,oDAAoD;YACtE,iBAAiB,EAAE,6BAA6B;YAChD,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBN,mBAAmB,CAACM,IAAI,CAAC;QAC3B,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAChB,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,QAAQ,GAAGd,gBAAgB,CAACe,MAAM,CAAEC,MAAM,IAC9CA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,UAAU,CAACoB,WAAW,CAAC,CAAC,CAC7D,CAAC;IACDjB,mBAAmB,CAACa,QAAQ,CAAC;EAC/B,CAAC;EACD,oBAEEnB,OAAA;IAAAyB,QAAA,gBACAzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,UAAW;MAClByB,QAAQ,EAAGC,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlC,OAAA;MAAAyB,QAAA,EACGpB,gBAAgB,CAAC8B,GAAG,CAAEd,MAAM,iBAC3BrB,OAAA;QAAAyB,QAAA,EAAqBJ,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACe,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGR;AAAChC,EAAA,CArDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}