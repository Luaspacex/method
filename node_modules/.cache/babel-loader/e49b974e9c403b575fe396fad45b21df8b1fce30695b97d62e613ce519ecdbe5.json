{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/Accounting/method/src/components/EmployersAddForm/EmployersAddForm.jsx\";\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ],\n//             services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\",\"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\",\"Замена рычагов и тяги подвески\",\"  Замена стабилизатора, крепления\",\"  Замена ступицы колеса, составляющие\",\"Замена шарнирных элементов\",\" Замена кулака поворотного\",\"Замена прокладок\",\"Замена системы подачи воздуха\",\"Замена механизма газораспределения\",\"Замена кривошипношатунного механизма\",\"Замена ременного привода\",\"Замена крепления двигателя\",\"Замена системы зажигания, накаливания\",\"Замена системы сцепления\",\"Замена автоматической коробки передач\",\"Замена главной передачи\",\" Замена термостата, прокладки термостата\",\"Замена радиатора масляного, водяного\",\"Замена патрубки системы охлаждения\",\"Замена выключателя, датчика\",\"Замена вентилятора охлаждения радиатора\",\"Замена насоса системы охлаждения\",\"Замена шарниров\",\"Замена рейки рулевой, насоса ГУР\",\"Замена тяги рулевой, наконечника рулевой тяги\",]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onServiceSelect = (e) => {\n//         this.setState({ service: e.target.value });\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees, services } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         {/* Выпадающий список сотрудников */}\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         {/* Выпадающий список услуг */}\n//                         <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите услугу</option>\n//                             {services.map((srv, index) => (\n//                                 <option key={index} value={srv}>{srv}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\nimport React, { Component } from \"react\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport \"./EmployersAddForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EmployersAddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onValueChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.onEmployeeSelect = e => {\n      const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n      if (selectedEmployee) {\n        this.setState({\n          name: selectedEmployee.name,\n          salary: selectedEmployee.salary,\n          service: selectedEmployee.service\n        });\n      }\n    };\n    this.onServiceSelect = e => {\n      this.setState({\n        service: e.target.value\n      });\n    };\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        salary,\n        service,\n        date\n      } = this.state;\n      if (name.length < 3 || !salary || !date) return;\n      const newEmployee = {\n        name,\n        salary,\n        service,\n        date\n      };\n\n      // Сохранение в JSON формате (например, добавляем в массив сотрудников)\n      const updatedEmployees = [...this.state.employees, newEmployee];\n\n      // Выводим или сохраняем JSON-данные\n      const jsonData = JSON.stringify(updatedEmployees);\n      console.log(\"Сохраненные данные:\", jsonData);\n      this.setState({\n        employees: updatedEmployees,\n        name: '',\n        salary: '',\n        service: '',\n        date: ''\n      });\n    };\n    this.state = {\n      name: \"\",\n      salary: \"\",\n      service: \"\",\n      date: \"\",\n      selectedEmployee: \"\",\n      employees: [{\n        name: \"Бекзат\"\n      }, {\n        name: \"Роман\"\n      }, {\n        name: \"Алик\"\n      }, {\n        name: \"Азим\"\n      }, {\n        name: \"Дима\"\n      }, {\n        name: \"Андрей\"\n      }, {\n        name: \"Слава\"\n      }],\n      services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\", \"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\", \"Замена рычагов и тяги подвески\", \"  Замена стабилизатора, крепления\", \"  Замена ступицы колеса, составляющие\", \"Замена шарнирных элементов\", \" Замена кулака поворотного\", \"Замена прокладок\", \"Замена системы подачи воздуха\", \"Замена механизма газораспределения\", \"Замена кривошипношатунного механизма\", \"Замена ременного привода\", \"Замена крепления двигателя\", \"Замена системы зажигания, накаливания\", \"Замена системы сцепления\", \"Замена автоматической коробки передач\", \"Замена главной передачи\", \" Замена термостата, прокладки термостата\", \"Замена радиатора масляного, водяного\", \"Замена патрубки системы охлаждения\", \"Замена выключателя, датчика\", \"Замена вентилятора охлаждения радиатора\", \"Замена насоса системы охлаждения\", \"Замена шарниров\", \"Замена рейки рулевой, насоса ГУР\", \"Замена тяги рулевой, наконечника рулевой тяги\"]\n    };\n  }\n  render() {\n    const {\n      name,\n      salary,\n      service,\n      date,\n      employees,\n      services\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appAddForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addForm dFlex\",\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onEmployeeSelect,\n            className: \"formControl newPostLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), employees.map((emp, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emp.name,\n              children: emp.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n            name: \"name\",\n            value: name,\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onServiceSelect,\n            className: \"formControl newPostLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), services.map((srv, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: srv,\n              children: srv\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438\",\n            name: \"service\",\n            value: service,\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u0417\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430 \\u0432 \\u0442\\u0435\\u043D\\u0433\\u0435\",\n            name: \"salary\",\n            value: salary,\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"formControl newPostLabel\",\n            name: \"date\",\n            value: date,\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn btnOutsideLight\",\n            variant: \"warning\",\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default EmployersAddForm;","map":{"version":3,"names":["React","Component","InputGroup","Button","jsxDEV","_jsxDEV","EmployersAddForm","constructor","props","onValueChange","e","setState","target","name","value","onEmployeeSelect","selectedEmployee","state","employees","find","emp","salary","service","onServiceSelect","onSubmit","preventDefault","date","length","newEmployee","updatedEmployees","jsonData","JSON","stringify","console","log","services","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","index","type","placeholder","srv","variant"],"sources":["/Users/aluabajzanova/Desktop/Accounting/method/src/components/EmployersAddForm/EmployersAddForm.jsx"],"sourcesContent":["// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\n\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ],\n//             services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\",\"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\",\"Замена рычагов и тяги подвески\",\"  Замена стабилизатора, крепления\",\"  Замена ступицы колеса, составляющие\",\"Замена шарнирных элементов\",\" Замена кулака поворотного\",\"Замена прокладок\",\"Замена системы подачи воздуха\",\"Замена механизма газораспределения\",\"Замена кривошипношатунного механизма\",\"Замена ременного привода\",\"Замена крепления двигателя\",\"Замена системы зажигания, накаливания\",\"Замена системы сцепления\",\"Замена автоматической коробки передач\",\"Замена главной передачи\",\" Замена термостата, прокладки термостата\",\"Замена радиатора масляного, водяного\",\"Замена патрубки системы охлаждения\",\"Замена выключателя, датчика\",\"Замена вентилятора охлаждения радиатора\",\"Замена насоса системы охлаждения\",\"Замена шарниров\",\"Замена рейки рулевой, насоса ГУР\",\"Замена тяги рулевой, наконечника рулевой тяги\",]\n//         };\n//     }\n    \n     \n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onServiceSelect = (e) => {\n//         this.setState({ service: e.target.value });\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees, services } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         {/* Выпадающий список сотрудников */}\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         {/* Выпадающий список услуг */}\n//                         <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите услугу</option>\n//                             {services.map((srv, index) => (\n//                                 <option key={index} value={srv}>{srv}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\n\nimport React, { Component } from \"react\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport \"./EmployersAddForm.css\";\n\nclass EmployersAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            salary: \"\",\n            service: \"\",\n            date: \"\",\n            selectedEmployee: \"\",\n            employees: [\n                { name: \"Бекзат\"},\n                { name: \"Роман\" },\n                { name: \"Алик\" },\n                { name: \"Азим\" },\n                { name: \"Дима\" },\n                { name: \"Андрей\" },\n                { name: \"Слава\" },\n            ],\n            services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\",\"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\",\"Замена рычагов и тяги подвески\",\"  Замена стабилизатора, крепления\",\"  Замена ступицы колеса, составляющие\",\"Замена шарнирных элементов\",\" Замена кулака поворотного\",\"Замена прокладок\",\"Замена системы подачи воздуха\",\"Замена механизма газораспределения\",\"Замена кривошипношатунного механизма\",\"Замена ременного привода\",\"Замена крепления двигателя\",\"Замена системы зажигания, накаливания\",\"Замена системы сцепления\",\"Замена автоматической коробки передач\",\"Замена главной передачи\",\" Замена термостата, прокладки термостата\",\"Замена радиатора масляного, водяного\",\"Замена патрубки системы охлаждения\",\"Замена выключателя, датчика\",\"Замена вентилятора охлаждения радиатора\",\"Замена насоса системы охлаждения\",\"Замена шарниров\",\"Замена рейки рулевой, насоса ГУР\",\"Замена тяги рулевой, наконечника рулевой тяги\",]\n        };\n    }\n\n    onValueChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onEmployeeSelect = (e) => {\n        const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n        if (selectedEmployee) {\n            this.setState({\n                name: selectedEmployee.name,\n                salary: selectedEmployee.salary,\n                service: selectedEmployee.service\n            });\n        }\n    }\n\n    onServiceSelect = (e) => {\n        this.setState({ service: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { name, salary, service, date } = this.state;\n        if (name.length < 3 || !salary || !date) return;\n\n        const newEmployee = { name, salary, service, date };\n\n        // Сохранение в JSON формате (например, добавляем в массив сотрудников)\n        const updatedEmployees = [...this.state.employees, newEmployee];\n        \n        // Выводим или сохраняем JSON-данные\n        const jsonData = JSON.stringify(updatedEmployees);\n        console.log(\"Сохраненные данные:\", jsonData);\n\n        this.setState({\n            employees: updatedEmployees,\n            name: '',\n            salary: '',\n            service: '',\n            date: ''\n        });\n    }\n\n    render() {\n        const { name, salary, service, date, employees, services } = this.state;\n        return (\n            <div className=\"appAddForm\">\n                <h3>Добавьте нового сотрудника</h3>\n                <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n                    <InputGroup className=\"mb-3\">\n                        {/* Выпадающий список сотрудников */}\n                        <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n                            <option value=\"\">Выберите сотрудника</option>\n                            {employees.map((emp, index) => (\n                                <option key={index} value={emp.name}>{emp.name}</option>\n                            ))}\n                        </select>\n\n                        <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n                            name=\"name\" value={name} onChange={this.onValueChange} />\n\n                        {/* Выпадающий список услуг */}\n                        <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n                            <option value=\"\">Выберите услугу</option>\n                            {services.map((srv, index) => (\n                                <option key={index} value={srv}>{srv}</option>\n                            ))}\n                        </select>\n\n                        <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n                            name=\"service\" value={service} onChange={this.onValueChange} />\n\n                        <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n                            name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n                        {/* Поле даты */}\n                        <input type=\"date\" className=\"formControl newPostLabel\"\n                            name=\"date\" value={date} onChange={this.onValueChange} />\n\n                        <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n                    </InputGroup>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EmployersAddForm;\n\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,SAASL,SAAS,CAAC;EACrCM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAoBjBC,aAAa,GAAIC,CAAC,IAAK;MACnB,IAAI,CAACC,QAAQ,CAAC;QACV,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}