{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/Accounting/method/src/components/EmployersAddForm/EmployersAddForm.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ],\n//             services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\",\"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\",\"Замена рычагов и тяги подвески\",\"  Замена стабилизатора, крепления\",\"  Замена ступицы колеса, составляющие\",\"Замена шарнирных элементов\",\" Замена кулака поворотного\",\"Замена прокладок\",\"Замена системы подачи воздуха\",\"Замена механизма газораспределения\",\"Замена кривошипношатунного механизма\",\"Замена ременного привода\",\"Замена крепления двигателя\",\"Замена системы зажигания, накаливания\",\"Замена системы сцепления\",\"Замена автоматической коробки передач\",\"Замена главной передачи\",\" Замена термостата, прокладки термостата\",\"Замена радиатора масляного, водяного\",\"Замена патрубки системы охлаждения\",\"Замена выключателя, датчика\",\"Замена вентилятора охлаждения радиатора\",\"Замена насоса системы охлаждения\",\"Замена шарниров\",\"Замена рейки рулевой, насоса ГУР\",\"Замена тяги рулевой, наконечника рулевой тяги\",]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onServiceSelect = (e) => {\n//         this.setState({ service: e.target.value });\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees, services } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         {/* Выпадающий список сотрудников */}\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         {/* Выпадающий список услуг */}\n//                         <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите услугу</option>\n//                             {services.map((srv, index) => (\n//                                 <option key={index} value={srv}>{srv}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\nclass EmployersAddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onValueChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value || \"\" // Убедитесь, что пустое значение становится \"\"\n      });\n    };\n    this.onEmployeeSelect = e => {\n      const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n      this.setState({\n        name: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.name) || \"\",\n        salary: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.salary) || \"\",\n        service: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.service) || \"\",\n        date: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.date) || \"\"\n      });\n    };\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        salary,\n        service,\n        date\n      } = this.state;\n      if (name.length < 3 || !salary || !date) return;\n      const newEmployee = {\n        name,\n        salary,\n        service,\n        date\n      };\n      const updatedEmployees = [...this.state.employees, newEmployee];\n      const jsonData = JSON.stringify(updatedEmployees);\n      console.log(\"Сохраненные данные:\", jsonData);\n      this.setState({\n        employees: updatedEmployees,\n        name: '',\n        salary: '',\n        service: '',\n        date: ''\n      });\n    };\n    this.state = {\n      name: \"\",\n      salary: \"\",\n      service: \"\",\n      date: \"\",\n      selectedEmployee: \"\",\n      employees: [{\n        name: \"Иван Иванов\",\n        salary: \"\",\n        service: \"\",\n        date: \"\"\n      }, {\n        name: \"Анна Смирнова\",\n        salary: \"\",\n        service: \"\",\n        date: \"\"\n      }, {\n        name: \"Петр Сидоров\",\n        salary: \"\",\n        service: \"\",\n        date: \"\"\n      }],\n      services: [\"Программист\", \"Дизайнер\", \"Менеджер\", \"Аналитик\"]\n    };\n  }\n  render() {\n    const {\n      name,\n      salary,\n      service,\n      date,\n      employees,\n      services\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appAddForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addForm dFlex\",\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onEmployeeSelect,\n            className: \"formControl newPostLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), employees.map((emp, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emp.name,\n              children: emp.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n            name: \"name\",\n            value: name || \"\",\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onServiceSelect,\n            className: \"formControl newPostLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), services.map((srv, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: srv,\n              children: srv\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438\",\n            name: \"service\",\n            value: service || \"\",\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"formControl newPostLabel\",\n            placeholder: \"\\u0417\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430 \\u0432 \\u0442\\u0435\\u043D\\u0433\\u0435\",\n            name: \"salary\",\n            value: salary || \"\",\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"formControl newPostLabel\",\n            name: \"date\",\n            value: date || \"\",\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn btnOutsideLight\",\n            variant: \"warning\",\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["EmployersAddForm","Component","constructor","props","onValueChange","e","setState","target","name","value","onEmployeeSelect","selectedEmployee","state","employees","find","emp","salary","service","date","onSubmit","preventDefault","length","newEmployee","updatedEmployees","jsonData","JSON","stringify","console","log","services","render","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","InputGroup","onChange","map","index","type","placeholder","onServiceSelect","srv","Button","variant"],"sources":["/Users/aluabajzanova/Desktop/Accounting/method/src/components/EmployersAddForm/EmployersAddForm.jsx"],"sourcesContent":["// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ]\n//         };\n//     }\n\n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\n\n// import React, { Component } from \"react\";\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import Button from 'react-bootstrap/Button';\n// import \"./EmployersAddForm.css\";\n\n// class EmployersAddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             salary: \"\",\n//             service: \"\",\n//             selectedEmployee: \"\",\n//             employees: [\n//                 { name: \"Бекзат\"},\n//                 { name: \"Роман\" },\n//                 { name: \"Алик\" },\n//                 { name: \"Азим\" },\n//                 { name: \"Дима\" },\n//                 { name: \"Андрей\" },\n//                 { name: \"Слава\" },\n//             ],\n//             services: [\"Компьютерная диагностика\", \"Замена лампы\", \"Монтаж/ демонтаж генератора\", \"Замена фильтров\", \"Замена масла\", \"Замена свечей зажигания\", \"Замена роликов и сальников\", \"Ремонт ходовой части\", \"Чистка форсунок ,со съемом и без съема\", \"Замена трансмиссионного масла и жидкости\", \"Ремонт электрооборудовани\", \"Ремонт генератора\", \"Замена дискового тормоза\", \"  Замена барабанного тормозного механизма\", \"Замена колодок тормозных\", \"Замена шлангов тормозных\", \" Замена тормозного цилиндра\",\"Ремонт суппорта тормозного\", \"Замена пружины подвески, рессора, торсион\", \"Замена амортизатора подвески\",\"Замена рычагов и тяги подвески\",\"  Замена стабилизатора, крепления\",\"  Замена ступицы колеса, составляющие\",\"Замена шарнирных элементов\",\" Замена кулака поворотного\",\"Замена прокладок\",\"Замена системы подачи воздуха\",\"Замена механизма газораспределения\",\"Замена кривошипношатунного механизма\",\"Замена ременного привода\",\"Замена крепления двигателя\",\"Замена системы зажигания, накаливания\",\"Замена системы сцепления\",\"Замена автоматической коробки передач\",\"Замена главной передачи\",\" Замена термостата, прокладки термостата\",\"Замена радиатора масляного, водяного\",\"Замена патрубки системы охлаждения\",\"Замена выключателя, датчика\",\"Замена вентилятора охлаждения радиатора\",\"Замена насоса системы охлаждения\",\"Замена шарниров\",\"Замена рейки рулевой, насоса ГУР\",\"Замена тяги рулевой, наконечника рулевой тяги\",]\n//         };\n//     }\n    \n     \n//     onValueChange = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         });\n//     }\n\n//     onEmployeeSelect = (e) => {\n//         const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n//         if (selectedEmployee) {\n//             this.setState({\n//                 name: selectedEmployee.name,\n//                 salary: selectedEmployee.salary,\n//                 service: selectedEmployee.service\n//             });\n//         }\n//     }\n\n//     onServiceSelect = (e) => {\n//         this.setState({ service: e.target.value });\n//     }\n\n//     onSubmit = (e) => {\n//         e.preventDefault();\n//         const { name, salary, service } = this.state;\n//         if (name.length < 3 || !salary) return;\n\n//         this.props.onAdd(name, salary, service);\n//         this.setState({\n//             name: '',\n//             salary: '',\n//             service: ''\n//         });\n//     }\n\n//     render() {\n//         const { name, salary, service, employees, services } = this.state;\n//         return (\n//             <div className=\"appAddForm\">\n//                 <h3>Добавьте нового сотрудника</h3>\n//                 <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n//                     <InputGroup className=\"mb-3\">\n//                         {/* Выпадающий список сотрудников */}\n//                         <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите сотрудника</option>\n//                             {employees.map((emp, index) => (\n//                                 <option key={index} value={emp.name}>{emp.name}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n//                             name=\"name\" value={name} onChange={this.onValueChange} />\n\n//                         {/* Выпадающий список услуг */}\n//                         <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n//                             <option value=\"\">Выберите услугу</option>\n//                             {services.map((srv, index) => (\n//                                 <option key={index} value={srv}>{srv}</option>\n//                             ))}\n//                         </select>\n\n//                         <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n//                             name=\"service\" value={service} onChange={this.onValueChange} />\n\n//                         <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n//                             name=\"salary\" value={salary} onChange={this.onValueChange} />\n\n//                         <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n//                     </InputGroup>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default EmployersAddForm;\n\nclass EmployersAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            salary: \"\",\n            service: \"\",\n            date: \"\",\n            selectedEmployee: \"\",\n            employees: [\n                { name: \"Иван Иванов\", salary: \"\", service: \"\", date: \"\" },\n                { name: \"Анна Смирнова\", salary: \"\", service: \"\", date: \"\" },\n                { name: \"Петр Сидоров\", salary: \"\", service: \"\", date: \"\" }\n            ],\n            services: [\"Программист\", \"Дизайнер\", \"Менеджер\", \"Аналитик\"]\n        };\n    }\n\n    onValueChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value || \"\"  // Убедитесь, что пустое значение становится \"\"\n        });\n    }\n\n    onEmployeeSelect = (e) => {\n        const selectedEmployee = this.state.employees.find(emp => emp.name === e.target.value);\n        this.setState({\n            name: selectedEmployee?.name || \"\",\n            salary: selectedEmployee?.salary || \"\",\n            service: selectedEmployee?.service || \"\",\n            date: selectedEmployee?.date || \"\"\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { name, salary, service, date } = this.state;\n        if (name.length < 3 || !salary || !date) return;\n\n        const newEmployee = { name, salary, service, date };\n\n        const updatedEmployees = [...this.state.employees, newEmployee];\n        const jsonData = JSON.stringify(updatedEmployees);\n        console.log(\"Сохраненные данные:\", jsonData);\n\n        this.setState({\n            employees: updatedEmployees,\n            name: '',\n            salary: '',\n            service: '',\n            date: ''\n        });\n    }\n\n    render() {\n        const { name, salary, service, date, employees, services } = this.state;\n        return (\n            <div className=\"appAddForm\">\n                <h3>Добавьте нового сотрудника</h3>\n                <form className=\"addForm dFlex\" onSubmit={this.onSubmit}>\n                    <InputGroup className=\"mb-3\">\n                        <select onChange={this.onEmployeeSelect} className=\"formControl newPostLabel\">\n                            <option value=\"\">Выберите сотрудника</option>\n                            {employees.map((emp, index) => (\n                                <option key={index} value={emp.name}>{emp.name}</option>\n                            ))}\n                        </select>\n\n                        <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Имя сотрудника\"\n                            name=\"name\" value={name || \"\"} onChange={this.onValueChange} />\n\n                        <select onChange={this.onServiceSelect} className=\"formControl newPostLabel\">\n                            <option value=\"\">Выберите услугу</option>\n                            {services.map((srv, index) => (\n                                <option key={index} value={srv}>{srv}</option>\n                            ))}\n                        </select>\n\n                        <input type=\"text\" className=\"formControl newPostLabel\" placeholder=\"Название услуги\"\n                            name=\"service\" value={service || \"\"} onChange={this.onValueChange} />\n\n                        <input type=\"number\" className=\"formControl newPostLabel\" placeholder=\"Зарплата в тенге\"\n                            name=\"salary\" value={salary || \"\"} onChange={this.onValueChange} />\n\n                        <input type=\"date\" className=\"formControl newPostLabel\"\n                            name=\"date\" value={date || \"\"} onChange={this.onValueChange} />\n\n                        <Button type=\"submit\" className=\"btn btnOutsideLight\" variant=\"warning\">Добавить</Button>\n                    </InputGroup>\n                </form>\n            </div>\n        );\n    }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMA,gBAAgB,SAASC,SAAS,CAAC;EACrCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAgBjBC,aAAa,GAAIC,CAAC,IAAK;MACnB,IAAI,CAACC,QAAQ,CAAC;QACV,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,IAAI,EAAE,CAAE;MAC3C,CAAC,CAAC;IACN,CAAC;IAAA,KAEDC,gBAAgB,GAAIL,CAAC,IAAK;MACtB,MAAMM,gBAAgB,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}