{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/select/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SelectOptionsFromAPI from './SelectOptionsFromAPI';\nimport BurgerMenu from \"./BurgerMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [filteredCounties, setFilteredCounties] = useState([]);\n  useEffect(() => {\n    const fetchCounties = async () => {\n      try {\n        const response = await fetch(`https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`, {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n            'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setFilteredCounties(data);\n        } else {\n          console.error('Invalid response format. Expected an array.');\n        }\n      } catch (error) {\n        console.error('Error fetching counties:', error);\n      }\n    };\n    fetchCounties();\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3BipqLMlWKX0Vu3FTi2yn9+x7D4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SelectOptionsFromAPI","BurgerMenu","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","filteredCounties","setFilteredCounties","useEffect","fetchCounties","response","fetch","method","headers","data","json","Array","isArray","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aluabajzanova/Desktop/select/my-app/src/App.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport SelectOptionsFromAPI from './SelectOptionsFromAPI';\nimport BurgerMenu from \"./BurgerMenu\";\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [filteredCounties, setFilteredCounties] = useState([]);\n  useEffect(() => {\n    const fetchCounties = async () => {\n      try {\n        const response = await fetch(\n          `https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`,\n          {\n            method: 'GET',\n            headers: {\n              'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n              'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const data = await response.json();\n\n        if (Array.isArray(data)) {\n          setFilteredCounties(data);\n        } else {\n          console.error('Invalid response format. Expected an array.');\n        }\n      } catch (error) {\n        console.error('Error fetching counties:', error);\n      }\n    };\n    fetchCounties();\n  }, [inputValue]);\n\n  return (\n    <div>\n      {/* <SelectOptionsFromAPI/> */}\n    {/* <h1>Select Options from API</h1>\n    <SelectOptionsFromAPI  /> */}\n    {/* <BurgerMenu/> */}\n    {/* <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <ul>\n        {filteredCounties.map((county) => (\n          <li key={county.id}>{county.name}</li>\n        ))}\n      </ul> */}\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5DW,SAAS,CAAC,MAAM;IACd,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0DAAyDP,UAAW,EAAC,EACtE;UACEQ,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,gBAAgB,EAAE,oDAAoD;YACtE,iBAAiB,EAAE,6BAA6B;YAChD,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBP,mBAAmB,CAACO,IAAI,CAAC;QAC3B,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeG,CAAC;AAER;AAACpB,EAAA,CAjDQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}