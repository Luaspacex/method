{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/select/my-app/src/SelectOptionsFromAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOptionsFromAPI = () => {\n  _s();\n  const [response, setResponse] = useState();\n  const [options, setOptions] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [filteredCounties, setFilteredCounties] = useState([]);\n  // useEffect(() => {\n  //   const fetchOptions = async () => {\n\n  //         try {\n  //           const response = await fetch(\n  //             `https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`,\n  //             {\n  //               method: \"GET\",\n  //               headers: {\n  //                 'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n  //           \t'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n  //                 \"Content-Type\": \"application/json\",\n  //               },\n  //             }\n  //           );\n  //           const data = await response.json();\n  //           setOptions(data);\n  //           console.log(data[0]);\n  //         } catch (error) {\n  //           return error;\n  //           console.error('Error fetching options:', error);\n  //         }\n\n  //   };\n\n  //   fetchOptions();\n  // }, [searchValue]);\n  // const handleInputChange = (e) => {\n  //     setSearchValue(e.target.value);\n  //   };\n  useEffect(() => {\n    // Fetch county data from the API and set it to filteredCounties state\n    // ...\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(`https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`, {\n          method: \"GET\",\n          headers: {\n            'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n            'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        setOptions(data);\n        console.log(data[0]);\n      } catch (error) {\n        return error;\n        console.error('Error fetching options:', error);\n      }\n    };\n    // Filter counties based on user input\n    const filtered = filteredCounties.filter(county => county.name.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredCounties(filtered);\n  }, [inputValue, filteredCounties]);\n  const handleFilter = () => {\n    // Filter counties based on user input\n    const filtered = filteredCounties.filter(county => county.name.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredCounties(filtered);\n  };\n  return (\n    /*#__PURE__*/\n    //      <div>\n    //   <input type=\"text\" value={searchValue} onChange={handleInputChange} placeholder=\"Search by name\" />\n    //   {/* <p>{response}</p> */}\n    //   {/* <Select options={options} /> */}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredCounties.map(county => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: county.name\n        }, county.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(SelectOptionsFromAPI, \"2iz4PRcexEQphMts56LamKIABZE=\");\n_c = SelectOptionsFromAPI;\nexport default SelectOptionsFromAPI;\n\n//   import React, { useState, useEffect } from 'react';\n\n// const SelectOptionsFromAPI = () => {\n//   const [options, setOptions] = useState([]);\n//   const [searchValue, setSearchValue] = useState('');\n\n//   useEffect(() => {\n//     const fetchOptions = async () => {\n//       try {\n//         const response = await fetch(`YOUR_API_ENDPOINT?search=${searchValue}`);\n//         const data = await response.json();\n//         setOptions(data);\n//       } catch (error) {\n//         console.error('Error fetching options:', error);\n//       }\n//     };\n\n//     fetchOptions();\n//   }, [searchValue]);\n\n//   const handleInputChange = (e) => {\n//     setSearchValue(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"text\" value={searchValue} onChange={handleInputChange} placeholder=\"Search by name\" />\n//       <Select options={options} />\n//     </div>\n//   );\n// };\n\n// export default SelectOptionsFromAPI;\nvar _c;\n$RefreshReg$(_c, \"SelectOptionsFromAPI\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","SelectOptionsFromAPI","_s","response","setResponse","options","setOptions","searchValue","setSearchValue","inputValue","setInputValue","filteredCounties","setFilteredCounties","fetchOptions","fetch","method","headers","data","json","console","log","error","filtered","filter","county","name","toLowerCase","includes","handleFilter","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","_c","$RefreshReg$"],"sources":["/Users/aluabajzanova/Desktop/select/my-app/src/SelectOptionsFromAPI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nconst SelectOptionsFromAPI = () => {\n    const [response, setResponse] = useState();\n    const [options, setOptions] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [inputValue, setInputValue] = useState('');\n    const [filteredCounties, setFilteredCounties] = useState([]);\n    // useEffect(() => {\n    //   const fetchOptions = async () => {\n\n    //         try {\n    //           const response = await fetch(\n    //             `https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`,\n    //             {\n    //               method: \"GET\",\n    //               headers: {\n    //                 'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n\t  //           \t'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n    //                 \"Content-Type\": \"application/json\",\n    //               },\n    //             }\n    //           );\n    //           const data = await response.json();\n    //           setOptions(data);\n    //           console.log(data[0]);\n    //         } catch (error) {\n    //           return error;\n    //           console.error('Error fetching options:', error);\n    //         }\n          \n\n\n    //   };\n  \n    //   fetchOptions();\n    // }, [searchValue]);\n    // const handleInputChange = (e) => {\n    //     setSearchValue(e.target.value);\n    //   };\n    useEffect(() => {\n      // Fetch county data from the API and set it to filteredCounties state\n      // ...\n      const fetchOptions = async () => {\n\n                try {\n                  const response = await fetch(\n                    `https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`,\n                    {\n                      method: \"GET\",\n                      headers: {\n                        'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n                  \t'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n                        \"Content-Type\": \"application/json\",\n                      },\n                    }\n                  );\n                  const data = await response.json();\n                  setOptions(data);\n                  console.log(data[0]);\n                } catch (error) {\n                  return error;\n                  console.error('Error fetching options:', error);\n                }\n      }\n      // Filter counties based on user input\n      const filtered = filteredCounties.filter((county) =>\n        county.name.toLowerCase().includes(inputValue.toLowerCase())\n      );\n      setFilteredCounties(filtered);\n    }, [inputValue, filteredCounties]);\n    const handleFilter = () => {\n      // Filter counties based on user input\n      const filtered = filteredCounties.filter((county) =>\n        county.name.toLowerCase().includes(inputValue.toLowerCase())\n      );\n      setFilteredCounties(filtered);\n    };\n    return (\n      \n    //      <div>\n    //   <input type=\"text\" value={searchValue} onChange={handleInputChange} placeholder=\"Search by name\" />\n    //   {/* <p>{response}</p> */}\n    //   {/* <Select options={options} /> */}\n    // </div>\n    <div>\n    <input\n      type=\"text\"\n      value={inputValue}\n      onChange={(e) => setInputValue(e.target.value)}\n    />\n    <button onClick={handleFilter}>Filter</button>\n    <ul>\n      {filteredCounties.map((county) => (\n        <li key={county.id}>{county.name}</li>\n      ))}\n    </ul>\n  </div>\n\n    );\n  };\n  \n  export default SelectOptionsFromAPI;\n\n//   import React, { useState, useEffect } from 'react';\n\n\n// const SelectOptionsFromAPI = () => {\n//   const [options, setOptions] = useState([]);\n//   const [searchValue, setSearchValue] = useState('');\n\n//   useEffect(() => {\n//     const fetchOptions = async () => {\n//       try {\n//         const response = await fetch(`YOUR_API_ENDPOINT?search=${searchValue}`);\n//         const data = await response.json();\n//         setOptions(data);\n//       } catch (error) {\n//         console.error('Error fetching options:', error);\n//       }\n//     };\n\n//     fetchOptions();\n//   }, [searchValue]);\n\n//   const handleInputChange = (e) => {\n//     setSearchValue(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"text\" value={searchValue} onChange={handleInputChange} placeholder=\"Search by name\" />\n//       <Select options={options} />\n//     </div>\n//   );\n// };\n\n// export default SelectOptionsFromAPI;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}