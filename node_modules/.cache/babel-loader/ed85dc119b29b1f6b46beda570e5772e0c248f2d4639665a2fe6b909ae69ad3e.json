{"ast":null,"code":"var _jsxFileName = \"/Users/aluabajzanova/Desktop/select/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import SelectOptionsFromAPI from './SelectOptionsFromAPI';\n// import BurgerMenu from \"./BurgerMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]); // State to store the fetched data\n  const [searchValue, setSearchValue] = useState(''); // State to store the search input value\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`, {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n            'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n            'Content-Type': 'application/json'\n          }\n        });\n        const jsonData = await response.json();\n        setData(jsonData); // Update the state with the fetched data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData(); // Fetch data when the component mounts or when the search value changes\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3MjUFSsv9l2rr/d4JZ7R9W2+rGA=\");\n_c = App;\nexport default App;\n\n// const [inputValue, setInputValue] = useState('');\n// const [filteredCounties, setFilteredCounties] = useState([]);\n// useEffect(() => {\n\n//   const fetchCounties = async () => {\n//     try {\n//       const response = await fetch(\n//         `https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`,\n//         {\n//           method: 'GET',\n//           headers: {\n//             'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n//             'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       // setFilteredCounties(data);\n//       if (Array.isArray(data)) {\n//         setFilteredCounties(data);\n//       } else {\n//         console.error('Invalid response format. Expected an array.');\n//       }\n//     } catch (error) {\n//       console.error('Error fetching counties:', error);\n//     }\n//   };\n//   fetchCounties();\n// }, [inputValue]);\n\n// const handleFilter = (filteredCounties) => {\n//   if (!Array.isArray(filteredCounties)) {\n//     // Handle the case when filteredCounties is not an array\n//     return null; // or display an error message, render a loading state, etc.\n//   }\n\n//   // Filter counties based on user input\n//   const filtered = filteredCounties.filter((county) =>\n//     county.name.toLowerCase().includes(inputValue.toLowerCase())\n//   );\n//   setFilteredCounties(filtered);\n// };\n//   <input\n//     type=\"text\"\n//     value={inputValue}\n//     onChange={(e) => setInputValue(e.target.value)}\n//   />\n//   <button onClick={handleFilter}>Filter</button>\n//   <ul>\n//     {filteredCounties.map((county) => (\n//       <li key={county.id}>{county.name}</li>\n//     ))}\n//   </ul>\n// </div>\n{/* <SelectOptionsFromAPI/> */}\n{/* <h1>Select Options from API</h1>\n <SelectOptionsFromAPI  /> */}\n{/* <BurgerMenu/> */}\n{/* <input\n    type=\"text\"\n    value={inputValue}\n    onChange={(e) => setInputValue(e.target.value)}\n  />\n  <ul>\n    {filteredCounties.map((county) => (\n      <li key={county.id}>{county.name}</li>\n    ))}\n  </ul> */}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","searchValue","setSearchValue","fetchData","response","fetch","method","headers","jsonData","json","error","console","children","length","map","item","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aluabajzanova/Desktop/select/my-app/src/App.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\n// import SelectOptionsFromAPI from './SelectOptionsFromAPI';\n// import BurgerMenu from \"./BurgerMenu\";\nfunction App() {\n  const [data, setData] = useState([]); // State to store the fetched data\n  const [searchValue, setSearchValue] = useState(''); // State to store the search input value\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `https://skyscanner44.p.rapidapi.com/autocomplete?query=${searchValue}`,\n          {\n            method: 'GET',\n            headers: {\n              'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n              'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        const jsonData = await response.json();\n        setData(jsonData); // Update the state with the fetched data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n  \n    fetchData(); // Fetch data when the component mounts or when the search value changes\n  }, [searchValue]);\n\n  \n  return (\n    <div>\n    {data.length > 0 ? (\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    ) : (\n      <p>Loading...</p>\n    )}\n  </div>\n\n     \n\n  );\n}\n\nexport default App;\n\n  // const [inputValue, setInputValue] = useState('');\n  // const [filteredCounties, setFilteredCounties] = useState([]);\n  // useEffect(() => {\n    \n  //   const fetchCounties = async () => {\n  //     try {\n  //       const response = await fetch(\n  //         `https://skyscanner44.p.rapidapi.com/autocomplete?query=${inputValue}`,\n  //         {\n  //           method: 'GET',\n  //           headers: {\n  //             'X-RapidAPI-Key': 'a6046e630emsh8d5e8a83e7d6144p1375b0jsna9b7da7739c5',\n  //             'X-RapidAPI-Host': 'skyscanner44.p.rapidapi.com',\n  //             'Content-Type': 'application/json',\n  //           },\n  //         }\n  //       );\n  //       const data = await response.json();\n  //       // setFilteredCounties(data);\n  //       if (Array.isArray(data)) {\n  //         setFilteredCounties(data);\n  //       } else {\n  //         console.error('Invalid response format. Expected an array.');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching counties:', error);\n  //     }\n  //   };\n  //   fetchCounties();\n  // }, [inputValue]);\n  \n  // const handleFilter = (filteredCounties) => {\n  //   if (!Array.isArray(filteredCounties)) {\n  //     // Handle the case when filteredCounties is not an array\n  //     return null; // or display an error message, render a loading state, etc.\n  //   }\n  \n  //   // Filter counties based on user input\n  //   const filtered = filteredCounties.filter((county) =>\n  //     county.name.toLowerCase().includes(inputValue.toLowerCase())\n  //   );\n  //   setFilteredCounties(filtered);\n  // };\n   //   <input\n  //     type=\"text\"\n  //     value={inputValue}\n  //     onChange={(e) => setInputValue(e.target.value)}\n  //   />\n  //   <button onClick={handleFilter}>Filter</button>\n  //   <ul>\n  //     {filteredCounties.map((county) => (\n  //       <li key={county.id}>{county.name}</li>\n  //     ))}\n  //   </ul>\n  // </div>\n      {/* <SelectOptionsFromAPI/> */}\n    {/* <h1>Select Options from API</h1>\n    <SelectOptionsFromAPI  /> */}\n    {/* <BurgerMenu/> */}\n    {/* <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <ul>\n        {filteredCounties.map((county) => (\n          <li key={county.id}>{county.name}</li>\n        ))}\n      </ul> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0DAAyDJ,WAAY,EAAC,EACvE;UACEK,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,gBAAgB,EAAE,oDAAoD;YACtE,iBAAiB,EAAE,6BAA6B;YAChD,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACD,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCT,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAGjB,oBACEL,OAAA;IAAAgB,QAAA,EACCb,IAAI,CAACc,MAAM,GAAG,CAAC,gBACdjB,OAAA;MAAAgB,QAAA,EACGb,IAAI,CAACe,GAAG,CAAEC,IAAI,iBACbnB,OAAA;QAAAgB,QAAA,EAAmBG,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELzB,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAKR;AAACvB,EAAA,CA5CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8CZ,eAAeA,GAAG;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,CAAC;AACH,CAAC;AACL,6BADK;AAED,CAAC;AACD,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UATK;AASU,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}